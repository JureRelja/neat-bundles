{"version":3,"sources":["../../src/cache/cache.server.ts"],"sourcesContent":["import { createClient } from \"redis\";\n\n//Redis client for caching\n\nconst client = createClient({\n    url: process.env.REDIS_URL,\n    socket: {\n        reconnectStrategy: function (retries) {\n            if (retries > 20) {\n                console.log(\"Too many attempts to reconnect. Redis connection was terminated\");\n                return new Error(\"Too many retries.\");\n            } else {\n                return retries * 500;\n            }\n        },\n    },\n});\nclient.on(\"error\", (error) => console.error(\"Redis client error:\", error));\n\n(async () => {\n    await client.connect();\n})();\n\nexport const redisClient = client;\n"],"names":["redisClient","client","createClient","url","process","env","REDIS_URL","socket","reconnectStrategy","retries","console","log","Error","on","error","connect"],"mappings":";;;;+BAuBaA;;;eAAAA;;;uBAvBgB;AAE7B,0BAA0B;AAE1B,MAAMC,SAASC,IAAAA,mBAAY,EAAC;IACxBC,KAAKC,QAAQC,GAAG,CAACC,SAAS;IAC1BC,QAAQ;QACJC,mBAAmB,SAAUC,OAAO;YAChC,IAAIA,UAAU,IAAI;gBACdC,QAAQC,GAAG,CAAC;gBACZ,OAAO,IAAIC,MAAM;YACrB,OAAO;gBACH,OAAOH,UAAU;YACrB;QACJ;IACJ;AACJ;AACAR,OAAOY,EAAE,CAAC,SAAS,CAACC,QAAUJ,QAAQI,KAAK,CAAC,uBAAuBA;AAElE,CAAA;IACG,MAAMb,OAAOc,OAAO;AACxB,CAAA;AAEO,MAAMf,cAAcC"}