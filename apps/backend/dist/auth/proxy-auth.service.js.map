{"version":3,"sources":["../../src/auth/proxy-auth.service.ts"],"sourcesContent":["import HmacSha256 from \"crypto-js/hmac-sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { Request } from \"express\";\n\n// Function to check if the bundle is published and belongs to the store\n@Injectable()\nexport class ProxyAuthService {\n    authentificate(request: Request): void {\n        const url: URL = new URL(`${process.env.SHOPIFY_APP_URL as string}${request.originalUrl}`);\n\n        if (this.checkSignature(url)) {\n            throw new UnauthorizedException(\"There was an error with your request. Signature is invalid.\");\n        }\n\n        const shop: string | null = url.searchParams.get(\"shop\");\n\n        if (!shop) {\n            throw new UnauthorizedException(\"There was an error with your request. 'shop' is missing.\");\n        }\n    }\n\n    checkSignature(url: URL): boolean {\n        const searchParams: URLSearchParams = url.searchParams;\n\n        const receivedSignature: string | null = searchParams.get(\"signature\");\n\n        searchParams.delete(\"signature\");\n\n        const queryParamsForSigning: string = this.getUrlForSigning(searchParams);\n\n        // Calculate the signature\n        const calculatedSignature: string = Hex.stringify(HmacSha256(queryParamsForSigning, process.env.NEAT_BUNDLES_DEV_SHOPIFY_API_SECRET as string));\n        // Compare the received signature with the calculated signature\n        if (receivedSignature !== calculatedSignature) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private getUrlForSigning(queryParams: URLSearchParams): string {\n        const queryParamEntries: IterableIterator<[string, string]> = queryParams.entries();\n\n        const arrayOfParams: [string, string][] = [];\n\n        // Iterate over the query params and add them to the array\n        for (const paramKeyValuePair of queryParamEntries) {\n            arrayOfParams.push(paramKeyValuePair);\n        }\n\n        // Sort the array of params by key\n        arrayOfParams.sort((a: [string, string], b: [string, string]) => {\n            return a[0].localeCompare(b[0]);\n        });\n\n        // Create the query string\n        let queryParametersString: string = \"\";\n\n        arrayOfParams.forEach((param: [string, string]): void => {\n            queryParametersString += `${param[0]}=${param[1]}`;\n        });\n\n        return queryParametersString;\n    }\n}\n"],"names":["ProxyAuthService","authentificate","request","url","URL","process","env","SHOPIFY_APP_URL","originalUrl","checkSignature","UnauthorizedException","shop","searchParams","get","receivedSignature","delete","queryParamsForSigning","getUrlForSigning","calculatedSignature","Hex","stringify","HmacSha256","NEAT_BUNDLES_DEV_SHOPIFY_API_SECRET","queryParams","queryParamEntries","entries","arrayOfParams","paramKeyValuePair","push","sort","a","b","localeCompare","queryParametersString","forEach","param"],"mappings":";;;;+BAOaA;;;eAAAA;;;mEAPU;+DACP;wBACkC;;;;;;;;;;;;AAK3C,IAAA,AAAMA,mBAAN,MAAMA;IACTC,eAAeC,OAAgB,EAAQ;QACnC,MAAMC,MAAW,IAAIC,IAAI,GAAGC,QAAQC,GAAG,CAACC,eAAe,GAAaL,QAAQM,WAAW,EAAE;QAEzF,IAAI,IAAI,CAACC,cAAc,CAACN,MAAM;YAC1B,MAAM,IAAIO,6BAAqB,CAAC;QACpC;QAEA,MAAMC,OAAsBR,IAAIS,YAAY,CAACC,GAAG,CAAC;QAEjD,IAAI,CAACF,MAAM;YACP,MAAM,IAAID,6BAAqB,CAAC;QACpC;IACJ;IAEAD,eAAeN,GAAQ,EAAW;QAC9B,MAAMS,eAAgCT,IAAIS,YAAY;QAEtD,MAAME,oBAAmCF,aAAaC,GAAG,CAAC;QAE1DD,aAAaG,MAAM,CAAC;QAEpB,MAAMC,wBAAgC,IAAI,CAACC,gBAAgB,CAACL;QAE5D,0BAA0B;QAC1B,MAAMM,sBAA8BC,eAAG,CAACC,SAAS,CAACC,IAAAA,mBAAU,EAACL,uBAAuBX,QAAQC,GAAG,CAACgB,mCAAmC;QACnI,+DAA+D;QAC/D,IAAIR,sBAAsBI,qBAAqB;YAC3C,OAAO;QACX;QAEA,OAAO;IACX;IAEQD,iBAAiBM,WAA4B,EAAU;QAC3D,MAAMC,oBAAwDD,YAAYE,OAAO;QAEjF,MAAMC,gBAAoC,EAAE;QAE5C,0DAA0D;QAC1D,KAAK,MAAMC,qBAAqBH,kBAAmB;YAC/CE,cAAcE,IAAI,CAACD;QACvB;QAEA,kCAAkC;QAClCD,cAAcG,IAAI,CAAC,CAACC,GAAqBC;YACrC,OAAOD,CAAC,CAAC,EAAE,CAACE,aAAa,CAACD,CAAC,CAAC,EAAE;QAClC;QAEA,0BAA0B;QAC1B,IAAIE,wBAAgC;QAEpCP,cAAcQ,OAAO,CAAC,CAACC;YACnBF,yBAAyB,GAAGE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEA,KAAK,CAAC,EAAE,EAAE;QACtD;QAEA,OAAOF;IACX;AACJ"}